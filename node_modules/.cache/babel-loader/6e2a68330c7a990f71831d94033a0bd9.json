{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _fns = require(\"@react-pdf/fns\");\n\nvar _omit = _interopRequireDefault(require(\"../run/omit\"));\n\nvar _flatten = _interopRequireDefault(require(\"../run/flatten\"));\n\nvar _empty = _interopRequireDefault(require(\"../attributedString/empty\"));\n\nvar omitFont = function omitFont(attributedString) {\n  var runs = attributedString.runs.map(function (run) {\n    return (0, _omit.default)('font', run);\n  });\n  return Object.assign({}, attributedString, {\n    runs: runs\n  });\n};\n/**\n * Performs font substitution and script itemization on attributed string\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} processed attributed string\n */\n\n\nvar preprocessRuns = function preprocessRuns(engines, options) {\n  return function (attributedString) {\n    if ((0, _fns.isNil)(attributedString)) return (0, _empty.default)();\n    var string = attributedString.string;\n    var fontSubstitution = engines.fontSubstitution,\n        scriptItemizer = engines.scriptItemizer;\n\n    var _omitFont = omitFont(attributedString),\n        omittedFontRuns = _omitFont.runs;\n\n    var _fontSubstitution = fontSubstitution(options)(attributedString),\n        substitutedRuns = _fontSubstitution.runs;\n\n    var _scriptItemizer = scriptItemizer(options)(attributedString),\n        itemizationRuns = _scriptItemizer.runs;\n\n    var runs = substitutedRuns.concat(itemizationRuns).concat(omittedFontRuns);\n    return {\n      string: string,\n      runs: (0, _flatten.default)(runs)\n    };\n  };\n};\n\nvar _default = preprocessRuns;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_fns","_omit","_flatten","_empty","omitFont","attributedString","runs","map","run","Object","assign","preprocessRuns","engines","options","isNil","string","fontSubstitution","scriptItemizer","_omitFont","omittedFontRuns","_fontSubstitution","substitutedRuns","_scriptItemizer","itemizationRuns","concat","_default"],"sources":["C:/Users/Pipe17/Desktop/practicaReact/loginfirebase/node_modules/@react-pdf/textkit/lib/layout/preprocessRuns.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _fns = require(\"@react-pdf/fns\");\n\nvar _omit = _interopRequireDefault(require(\"../run/omit\"));\n\nvar _flatten = _interopRequireDefault(require(\"../run/flatten\"));\n\nvar _empty = _interopRequireDefault(require(\"../attributedString/empty\"));\n\nvar omitFont = function omitFont(attributedString) {\n  var runs = attributedString.runs.map(function (run) {\n    return (0, _omit.default)('font', run);\n  });\n  return Object.assign({}, attributedString, {\n    runs: runs\n  });\n};\n/**\n * Performs font substitution and script itemization on attributed string\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} processed attributed string\n */\n\n\nvar preprocessRuns = function preprocessRuns(engines, options) {\n  return function (attributedString) {\n    if ((0, _fns.isNil)(attributedString)) return (0, _empty.default)();\n    var string = attributedString.string;\n    var fontSubstitution = engines.fontSubstitution,\n        scriptItemizer = engines.scriptItemizer;\n\n    var _omitFont = omitFont(attributedString),\n        omittedFontRuns = _omitFont.runs;\n\n    var _fontSubstitution = fontSubstitution(options)(attributedString),\n        substitutedRuns = _fontSubstitution.runs;\n\n    var _scriptItemizer = scriptItemizer(options)(attributedString),\n        itemizationRuns = _scriptItemizer.runs;\n\n    var runs = substitutedRuns.concat(itemizationRuns).concat(omittedFontRuns);\n    return {\n      string: string,\n      runs: (0, _flatten.default)(runs)\n    };\n  };\n};\n\nvar _default = preprocessRuns;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,IAAI,GAAGJ,OAAO,CAAC,gBAAD,CAAlB;;AAEA,IAAIK,KAAK,GAAGN,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAlC;;AAEA,IAAIM,QAAQ,GAAGP,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAArC;;AAEA,IAAIO,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAAnC;;AAEA,IAAIQ,QAAQ,GAAG,SAASA,QAAT,CAAkBC,gBAAlB,EAAoC;EACjD,IAAIC,IAAI,GAAGD,gBAAgB,CAACC,IAAjB,CAAsBC,GAAtB,CAA0B,UAAUC,GAAV,EAAe;IAClD,OAAO,CAAC,GAAGP,KAAK,CAACJ,OAAV,EAAmB,MAAnB,EAA2BW,GAA3B,CAAP;EACD,CAFU,CAAX;EAGA,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,gBAAlB,EAAoC;IACzCC,IAAI,EAAEA;EADmC,CAApC,CAAP;AAGD,CAPD;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIK,cAAc,GAAG,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0C;EAC7D,OAAO,UAAUR,gBAAV,EAA4B;IACjC,IAAI,CAAC,GAAGL,IAAI,CAACc,KAAT,EAAgBT,gBAAhB,CAAJ,EAAuC,OAAO,CAAC,GAAGF,MAAM,CAACN,OAAX,GAAP;IACvC,IAAIkB,MAAM,GAAGV,gBAAgB,CAACU,MAA9B;IACA,IAAIC,gBAAgB,GAAGJ,OAAO,CAACI,gBAA/B;IAAA,IACIC,cAAc,GAAGL,OAAO,CAACK,cAD7B;;IAGA,IAAIC,SAAS,GAAGd,QAAQ,CAACC,gBAAD,CAAxB;IAAA,IACIc,eAAe,GAAGD,SAAS,CAACZ,IADhC;;IAGA,IAAIc,iBAAiB,GAAGJ,gBAAgB,CAACH,OAAD,CAAhB,CAA0BR,gBAA1B,CAAxB;IAAA,IACIgB,eAAe,GAAGD,iBAAiB,CAACd,IADxC;;IAGA,IAAIgB,eAAe,GAAGL,cAAc,CAACJ,OAAD,CAAd,CAAwBR,gBAAxB,CAAtB;IAAA,IACIkB,eAAe,GAAGD,eAAe,CAAChB,IADtC;;IAGA,IAAIA,IAAI,GAAGe,eAAe,CAACG,MAAhB,CAAuBD,eAAvB,EAAwCC,MAAxC,CAA+CL,eAA/C,CAAX;IACA,OAAO;MACLJ,MAAM,EAAEA,MADH;MAELT,IAAI,EAAE,CAAC,GAAGJ,QAAQ,CAACL,OAAb,EAAsBS,IAAtB;IAFD,CAAP;EAID,CApBD;AAqBD,CAtBD;;AAwBA,IAAImB,QAAQ,GAAGd,cAAf;AACAb,OAAO,CAACD,OAAR,GAAkB4B,QAAlB"},"metadata":{},"sourceType":"script"}