{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _append = _interopRequireDefault(require(\"../indices/append\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n/**\n * Append glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar appendGlyph = function appendGlyph(glyph, run) {\n  var _glyph$codePoints;\n\n  var glyphLength = ((_glyph$codePoints = glyph.codePoints) === null || _glyph$codePoints === void 0 ? void 0 : _glyph$codePoints.length) || 0;\n  var end = run.end + glyphLength;\n  var glyphs = run.glyphs.concat(glyph);\n  var glyphIndices = (0, _append.default)(glyphLength, run.glyphIndices);\n  if (!run.positions) return Object.assign({}, run, {\n    end: end,\n    glyphs: glyphs,\n    glyphIndices: glyphIndices\n  });\n  var positions = run.positions.concat({\n    xAdvance: glyph.advanceWidth * (0, _scale.default)(run)\n  });\n  return Object.assign({}, run, {\n    end: end,\n    glyphs: glyphs,\n    glyphIndices: glyphIndices,\n    positions: positions\n  });\n};\n/**\n * Append glyph or code point to run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar append = function append(value, run) {\n  if (!value) return run;\n  var font = (0, _getFont.default)(run);\n  var glyph = (0, _isNumber.default)(value) ? (0, _fromCodePoint.default)(value, font) : value;\n  return appendGlyph(glyph, run);\n};\n\nvar _default = append;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_scale","_getFont","_isNumber","_append","_fromCodePoint","appendGlyph","glyph","run","_glyph$codePoints","glyphLength","codePoints","length","end","glyphs","concat","glyphIndices","positions","Object","assign","xAdvance","advanceWidth","append","value","font","_default"],"sources":["C:/Users/Pipe17/Desktop/practicaReact/loginfirebase/node_modules/@react-pdf/textkit/lib/run/append.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _append = _interopRequireDefault(require(\"../indices/append\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n\n/**\n * Append glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\nvar appendGlyph = function appendGlyph(glyph, run) {\n  var _glyph$codePoints;\n\n  var glyphLength = ((_glyph$codePoints = glyph.codePoints) === null || _glyph$codePoints === void 0 ? void 0 : _glyph$codePoints.length) || 0;\n  var end = run.end + glyphLength;\n  var glyphs = run.glyphs.concat(glyph);\n  var glyphIndices = (0, _append.default)(glyphLength, run.glyphIndices);\n  if (!run.positions) return Object.assign({}, run, {\n    end: end,\n    glyphs: glyphs,\n    glyphIndices: glyphIndices\n  });\n  var positions = run.positions.concat({\n    xAdvance: glyph.advanceWidth * (0, _scale.default)(run)\n  });\n  return Object.assign({}, run, {\n    end: end,\n    glyphs: glyphs,\n    glyphIndices: glyphIndices,\n    positions: positions\n  });\n};\n/**\n * Append glyph or code point to run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar append = function append(value, run) {\n  if (!value) return run;\n  var font = (0, _getFont.default)(run);\n  var glyph = (0, _isNumber.default)(value) ? (0, _fromCodePoint.default)(value, font) : value;\n  return appendGlyph(glyph, run);\n};\n\nvar _default = append;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,MAAM,GAAGL,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAnC;;AAEA,IAAIK,QAAQ,GAAGN,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIM,SAAS,GAAGP,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAtC;;AAEA,IAAIO,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAApC;;AAEA,IAAIQ,cAAc,GAAGT,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;EACjD,IAAIC,iBAAJ;;EAEA,IAAIC,WAAW,GAAG,CAAC,CAACD,iBAAiB,GAAGF,KAAK,CAACI,UAA3B,MAA2C,IAA3C,IAAmDF,iBAAiB,KAAK,KAAK,CAA9E,GAAkF,KAAK,CAAvF,GAA2FA,iBAAiB,CAACG,MAA9G,KAAyH,CAA3I;EACA,IAAIC,GAAG,GAAGL,GAAG,CAACK,GAAJ,GAAUH,WAApB;EACA,IAAII,MAAM,GAAGN,GAAG,CAACM,MAAJ,CAAWC,MAAX,CAAkBR,KAAlB,CAAb;EACA,IAAIS,YAAY,GAAG,CAAC,GAAGZ,OAAO,CAACN,OAAZ,EAAqBY,WAArB,EAAkCF,GAAG,CAACQ,YAAtC,CAAnB;EACA,IAAI,CAACR,GAAG,CAACS,SAAT,EAAoB,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,GAAlB,EAAuB;IAChDK,GAAG,EAAEA,GAD2C;IAEhDC,MAAM,EAAEA,MAFwC;IAGhDE,YAAY,EAAEA;EAHkC,CAAvB,CAAP;EAKpB,IAAIC,SAAS,GAAGT,GAAG,CAACS,SAAJ,CAAcF,MAAd,CAAqB;IACnCK,QAAQ,EAAEb,KAAK,CAACc,YAAN,GAAqB,CAAC,GAAGpB,MAAM,CAACH,OAAX,EAAoBU,GAApB;EADI,CAArB,CAAhB;EAGA,OAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,GAAlB,EAAuB;IAC5BK,GAAG,EAAEA,GADuB;IAE5BC,MAAM,EAAEA,MAFoB;IAG5BE,YAAY,EAAEA,YAHc;IAI5BC,SAAS,EAAEA;EAJiB,CAAvB,CAAP;AAMD,CArBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIK,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuBf,GAAvB,EAA4B;EACvC,IAAI,CAACe,KAAL,EAAY,OAAOf,GAAP;EACZ,IAAIgB,IAAI,GAAG,CAAC,GAAGtB,QAAQ,CAACJ,OAAb,EAAsBU,GAAtB,CAAX;EACA,IAAID,KAAK,GAAG,CAAC,GAAGJ,SAAS,CAACL,OAAd,EAAuByB,KAAvB,IAAgC,CAAC,GAAGlB,cAAc,CAACP,OAAnB,EAA4ByB,KAA5B,EAAmCC,IAAnC,CAAhC,GAA2ED,KAAvF;EACA,OAAOjB,WAAW,CAACC,KAAD,EAAQC,GAAR,CAAlB;AACD,CALD;;AAOA,IAAIiB,QAAQ,GAAGH,MAAf;AACAvB,OAAO,CAACD,OAAR,GAAkB2B,QAAlB"},"metadata":{},"sourceType":"script"}