{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _offset = _interopRequireDefault(require(\"./offset\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\n\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\n\n\nvar slice = function slice(start, end, run) {\n  var _run$glyphs, _run$glyphs2;\n\n  var runScale = (0, _scale.default)(run);\n  var font = (0, _getFont.default)(run); // Get glyph start and end indices\n\n  var startIndex = (0, _glyphIndexAt.default)(start, run);\n  var endIndex = (0, _glyphIndexAt.default)(end, run); // Get start and end glyph\n\n  var startGlyph = (_run$glyphs = run.glyphs) === null || _run$glyphs === void 0 ? void 0 : _run$glyphs[startIndex];\n  var endGlyph = (_run$glyphs2 = run.glyphs) === null || _run$glyphs2 === void 0 ? void 0 : _run$glyphs2[endIndex]; // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset.default)(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice.default)(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset.default)(end, run);\n  var endGlyphs = (0, _slice.default)(0, endOffset, font, endGlyph); // Compute new glyphs\n\n  var sliceStart = startIndex + Math.min(1, startOffset);\n  var glyphs = (run.glyphs || []).slice(sliceStart, endIndex); // Compute new positions\n\n  var glyphPosition = function glyphPosition(g) {\n    return {\n      xAdvance: g.advanceWidth * runScale\n    };\n  };\n\n  var startPositions = startGlyphs.map(glyphPosition);\n  var positions = (run.positions || []).slice(sliceStart, endIndex);\n  var endPositions = endGlyphs.map(glyphPosition);\n  return Object.assign({}, run, {\n    start: run.start + start,\n    end: Math.min(run.end, run.start + end),\n    glyphIndices: (0, _normalize.default)((run.glyphIndices || []).slice(start, end)),\n    glyphs: [startGlyphs, glyphs, endGlyphs].flat(),\n    positions: [startPositions, positions, endPositions].flat()\n  });\n};\n\nvar _default = slice;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_scale","_offset","_getFont","_slice","_glyphIndexAt","_normalize","slice","start","end","run","_run$glyphs","_run$glyphs2","runScale","font","startIndex","endIndex","startGlyph","glyphs","endGlyph","startOffset","startGlyphs","Infinity","endOffset","endGlyphs","sliceStart","Math","min","glyphPosition","g","xAdvance","advanceWidth","startPositions","map","positions","endPositions","Object","assign","glyphIndices","flat","_default"],"sources":["C:/Users/Pipe17/Desktop/practicaReact/loginfirebase/node_modules/@react-pdf/textkit/lib/run/slice.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _offset = _interopRequireDefault(require(\"./offset\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\n\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\nvar slice = function slice(start, end, run) {\n  var _run$glyphs, _run$glyphs2;\n\n  var runScale = (0, _scale.default)(run);\n  var font = (0, _getFont.default)(run); // Get glyph start and end indices\n\n  var startIndex = (0, _glyphIndexAt.default)(start, run);\n  var endIndex = (0, _glyphIndexAt.default)(end, run); // Get start and end glyph\n\n  var startGlyph = (_run$glyphs = run.glyphs) === null || _run$glyphs === void 0 ? void 0 : _run$glyphs[startIndex];\n  var endGlyph = (_run$glyphs2 = run.glyphs) === null || _run$glyphs2 === void 0 ? void 0 : _run$glyphs2[endIndex]; // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset.default)(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice.default)(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset.default)(end, run);\n  var endGlyphs = (0, _slice.default)(0, endOffset, font, endGlyph); // Compute new glyphs\n\n  var sliceStart = startIndex + Math.min(1, startOffset);\n  var glyphs = (run.glyphs || []).slice(sliceStart, endIndex); // Compute new positions\n\n  var glyphPosition = function glyphPosition(g) {\n    return {\n      xAdvance: g.advanceWidth * runScale\n    };\n  };\n\n  var startPositions = startGlyphs.map(glyphPosition);\n  var positions = (run.positions || []).slice(sliceStart, endIndex);\n  var endPositions = endGlyphs.map(glyphPosition);\n  return Object.assign({}, run, {\n    start: run.start + start,\n    end: Math.min(run.end, run.start + end),\n    glyphIndices: (0, _normalize.default)((run.glyphIndices || []).slice(start, end)),\n    glyphs: [startGlyphs, glyphs, endGlyphs].flat(),\n    positions: [startPositions, positions, endPositions].flat()\n  });\n};\n\nvar _default = slice;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}