{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ascent = _interopRequireDefault(require(\"../../run/ascent\"));\n\nvar _ascent2 = _interopRequireDefault(require(\"../../attributedString/ascent\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"../../run/advanceWidth\"));\n\nvar _advanceWidth2 = _interopRequireDefault(require(\"../../attributedString/advanceWidth\"));\n/* eslint-disable no-param-reassign */\n// The base font size used for calculating underline thickness.\n\n\nvar BASE_FONT_SIZE = 12;\n/**\n * A TextDecorationEngine is used by a Typesetter to generate\n * DecorationLines for a line fragment, including underlines\n * and strikes.\n */\n\nvar textDecoration = function textDecoration() {\n  return function (lineFragment) {\n    var x = lineFragment.overflowLeft || 0;\n    var overflowRight = lineFragment.overflowRight || 0;\n    var maxX = (0, _advanceWidth2.default)(lineFragment) - overflowRight;\n    lineFragment.decorationLines = [];\n\n    for (var i = 0; i < lineFragment.runs.length; i += 1) {\n      var run = lineFragment.runs[i];\n      var width = Math.min(maxX - x, (0, _advanceWidth.default)(run));\n      var thickness = Math.max(0.5, Math.floor(run.attributes.fontSize / BASE_FONT_SIZE));\n\n      if (run.attributes.underline) {\n        var rect = {\n          x: x,\n          y: (0, _ascent2.default)(lineFragment) + thickness * 2,\n          width: width,\n          height: thickness\n        };\n        var line = {\n          rect: rect,\n          opacity: run.attributes.opacity,\n          color: run.attributes.underlineColor || 'black',\n          style: run.attributes.underlineStyle || 'solid'\n        };\n        lineFragment.decorationLines.push(line);\n      }\n\n      if (run.attributes.strike) {\n        var y = (0, _ascent2.default)(lineFragment) - (0, _ascent.default)(run) / 3;\n        var _rect = {\n          x: x,\n          y: y,\n          width: width,\n          height: thickness\n        };\n        var _line = {\n          rect: _rect,\n          opacity: run.attributes.opacity,\n          color: run.attributes.strikeColor || 'black',\n          style: run.attributes.strikeStyle || 'solid'\n        };\n        lineFragment.decorationLines.push(_line);\n      }\n\n      x += width;\n    }\n\n    return lineFragment;\n  };\n};\n\nvar _default = textDecoration;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_ascent","_ascent2","_advanceWidth","_advanceWidth2","BASE_FONT_SIZE","textDecoration","lineFragment","x","overflowLeft","overflowRight","maxX","decorationLines","i","runs","length","run","width","Math","min","thickness","max","floor","attributes","fontSize","underline","rect","y","height","line","opacity","color","underlineColor","style","underlineStyle","push","strike","_rect","_line","strikeColor","strikeStyle","_default"],"sources":["C:/Users/Pipe17/Desktop/practicaReact/loginfirebase/node_modules/@react-pdf/textkit/lib/engines/textDecoration/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ascent = _interopRequireDefault(require(\"../../run/ascent\"));\n\nvar _ascent2 = _interopRequireDefault(require(\"../../attributedString/ascent\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"../../run/advanceWidth\"));\n\nvar _advanceWidth2 = _interopRequireDefault(require(\"../../attributedString/advanceWidth\"));\n\n/* eslint-disable no-param-reassign */\n// The base font size used for calculating underline thickness.\nvar BASE_FONT_SIZE = 12;\n/**\n * A TextDecorationEngine is used by a Typesetter to generate\n * DecorationLines for a line fragment, including underlines\n * and strikes.\n */\n\nvar textDecoration = function textDecoration() {\n  return function (lineFragment) {\n    var x = lineFragment.overflowLeft || 0;\n    var overflowRight = lineFragment.overflowRight || 0;\n    var maxX = (0, _advanceWidth2.default)(lineFragment) - overflowRight;\n    lineFragment.decorationLines = [];\n\n    for (var i = 0; i < lineFragment.runs.length; i += 1) {\n      var run = lineFragment.runs[i];\n      var width = Math.min(maxX - x, (0, _advanceWidth.default)(run));\n      var thickness = Math.max(0.5, Math.floor(run.attributes.fontSize / BASE_FONT_SIZE));\n\n      if (run.attributes.underline) {\n        var rect = {\n          x: x,\n          y: (0, _ascent2.default)(lineFragment) + thickness * 2,\n          width: width,\n          height: thickness\n        };\n        var line = {\n          rect: rect,\n          opacity: run.attributes.opacity,\n          color: run.attributes.underlineColor || 'black',\n          style: run.attributes.underlineStyle || 'solid'\n        };\n        lineFragment.decorationLines.push(line);\n      }\n\n      if (run.attributes.strike) {\n        var y = (0, _ascent2.default)(lineFragment) - (0, _ascent.default)(run) / 3;\n        var _rect = {\n          x: x,\n          y: y,\n          width: width,\n          height: thickness\n        };\n        var _line = {\n          rect: _rect,\n          opacity: run.attributes.opacity,\n          color: run.attributes.strikeColor || 'black',\n          style: run.attributes.strikeStyle || 'solid'\n        };\n        lineFragment.decorationLines.push(_line);\n      }\n\n      x += width;\n    }\n\n    return lineFragment;\n  };\n};\n\nvar _default = textDecoration;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}