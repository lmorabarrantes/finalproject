{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _slice = _interopRequireDefault(require(\"./slice\"));\n\nvar _concat = _interopRequireDefault(require(\"./concat\"));\n\nvar _append = _interopRequireDefault(require(\"./append\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n/**\n * Insert glyph to run in the given index\n *\n * @param  {number}  string index\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object}  run with glyph\n */\n\n\nvar insertGlyph = function insertGlyph(index, glyph, run) {\n  if (!glyph) return run; // Split resolves ligature splitting in case new glyph breaks some\n\n  var leadingRun = (0, _slice.default)(0, index, run);\n  var trailingRun = (0, _slice.default)(index, Infinity, run);\n  return (0, _concat.default)((0, _append.default)(glyph, leadingRun), trailingRun);\n};\n/**\n * Insert either glyph or code point to run in the given index\n *\n * @param  {number}  string index\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object}  run with glyph\n */\n\n\nvar insert = function insert(index, value, run) {\n  var font = (0, _getFont.default)(run);\n  var glyph = (0, _isNumber.default)(value) ? (0, _fromCodePoint.default)(value, font) : value;\n  return insertGlyph(index, glyph, run);\n};\n\nvar _default = insert;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","default","exports","__esModule","_slice","_concat","_append","_getFont","_isNumber","_fromCodePoint","insertGlyph","index","glyph","run","leadingRun","trailingRun","Infinity","insert","value","font","_default"],"sources":["C:/Users/Pipe17/Desktop/practicaReact/loginfirebase/node_modules/@react-pdf/textkit/lib/run/insert.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _slice = _interopRequireDefault(require(\"./slice\"));\n\nvar _concat = _interopRequireDefault(require(\"./concat\"));\n\nvar _append = _interopRequireDefault(require(\"./append\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n\n/**\n * Insert glyph to run in the given index\n *\n * @param  {number}  string index\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object}  run with glyph\n */\nvar insertGlyph = function insertGlyph(index, glyph, run) {\n  if (!glyph) return run; // Split resolves ligature splitting in case new glyph breaks some\n\n  var leadingRun = (0, _slice.default)(0, index, run);\n  var trailingRun = (0, _slice.default)(index, Infinity, run);\n  return (0, _concat.default)((0, _append.default)(glyph, leadingRun), trailingRun);\n};\n/**\n * Insert either glyph or code point to run in the given index\n *\n * @param  {number}  string index\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object}  run with glyph\n */\n\n\nvar insert = function insert(index, value, run) {\n  var font = (0, _getFont.default)(run);\n  var glyph = (0, _isNumber.default)(value) ? (0, _fromCodePoint.default)(value, font) : value;\n  return insertGlyph(index, glyph, run);\n};\n\nvar _default = insert;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAAP,CAAwDC,OAArF;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACD,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIG,MAAM,GAAGL,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAnC;;AAEA,IAAIK,OAAO,GAAGN,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIM,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIO,QAAQ,GAAGR,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIQ,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAtC;;AAEA,IAAIS,cAAc,GAAGV,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;EACxD,IAAI,CAACD,KAAL,EAAY,OAAOC,GAAP,CAD4C,CAChC;;EAExB,IAAIC,UAAU,GAAG,CAAC,GAAGV,MAAM,CAACH,OAAX,EAAoB,CAApB,EAAuBU,KAAvB,EAA8BE,GAA9B,CAAjB;EACA,IAAIE,WAAW,GAAG,CAAC,GAAGX,MAAM,CAACH,OAAX,EAAoBU,KAApB,EAA2BK,QAA3B,EAAqCH,GAArC,CAAlB;EACA,OAAO,CAAC,GAAGR,OAAO,CAACJ,OAAZ,EAAqB,CAAC,GAAGK,OAAO,CAACL,OAAZ,EAAqBW,KAArB,EAA4BE,UAA5B,CAArB,EAA8DC,WAA9D,CAAP;AACD,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,MAAM,GAAG,SAASA,MAAT,CAAgBN,KAAhB,EAAuBO,KAAvB,EAA8BL,GAA9B,EAAmC;EAC9C,IAAIM,IAAI,GAAG,CAAC,GAAGZ,QAAQ,CAACN,OAAb,EAAsBY,GAAtB,CAAX;EACA,IAAID,KAAK,GAAG,CAAC,GAAGJ,SAAS,CAACP,OAAd,EAAuBiB,KAAvB,IAAgC,CAAC,GAAGT,cAAc,CAACR,OAAnB,EAA4BiB,KAA5B,EAAmCC,IAAnC,CAAhC,GAA2ED,KAAvF;EACA,OAAOR,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,CAAlB;AACD,CAJD;;AAMA,IAAIO,QAAQ,GAAGH,MAAf;AACAf,OAAO,CAACD,OAAR,GAAkBmB,QAAlB"},"metadata":{},"sourceType":"script"}