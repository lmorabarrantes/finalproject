[{"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\index.js":"1","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\App.js":"2","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Productos.jsx":"3","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Clientes.jsx":"4","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\NavBar.jsx":"5","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\FormularioFactura.jsx":"6","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Login.jsx":"7","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\PopUp.jsx":"8","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\PanelControl.jsx":"9","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\firebase.js":"10","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Modal.jsx":"11"},{"size":254,"mtime":1654910372345,"results":"12","hashOfConfig":"13"},{"size":1298,"mtime":1656053285444,"results":"14","hashOfConfig":"13"},{"size":16595,"mtime":1657236011663,"results":"15","hashOfConfig":"13"},{"size":11655,"mtime":1656048399969,"results":"16","hashOfConfig":"13"},{"size":3482,"mtime":1656449052789,"results":"17","hashOfConfig":"13"},{"size":10642,"mtime":1656999201660,"results":"18","hashOfConfig":"13"},{"size":5635,"mtime":1656120148413,"results":"19","hashOfConfig":"13"},{"size":1318,"mtime":1656393075834,"results":"20","hashOfConfig":"13"},{"size":5196,"mtime":1656396603696,"results":"21","hashOfConfig":"13"},{"size":747,"mtime":1655245818507,"results":"22","hashOfConfig":"13"},{"size":5876,"mtime":1656120592058,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1k4z3oq",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\index.js",[],[],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\App.js",["60","61"],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Productos.jsx",["62","63","64"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getDocs,\r\n  setDoc,\r\n  doc,\r\n  collection,\r\n  addDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport db from \"../firebase\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PopUp from \"./PopUp\";\r\n\r\nconst Productos = () => {\r\n  //proteger RUTA\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      setUser(user);\r\n    } else {\r\n      navigate(\"../\", { replace: true });\r\n    }\r\n  }, []);\r\n\r\n  const [productos, setProductos] = useState([]);\r\n  const [nombreProducto, setNombreProducto] = useState(\"\");\r\n  const [cantidadDisponibles, setCantidadDisponibles] = useState(\"\");\r\n  const [categoriaProducto, setCategoriaProducto] = useState(\"\");\r\n  const [precioProducto, setPrecioProducto] = useState(\"\");\r\n  const [impuestoProducto, setImpuestoProducto] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [id, setId] = useState(null);\r\n  const [ModoEdicion, setModoEdicion] = useState(false);\r\n  const [obtenerBusqueda, setObtenerBusqueda] = useState(null);\r\n  const [arrayBusquedaEditado, setArrayBusquedaEditado] = useState(null);\r\n\r\n  //modal alerta\r\n  const [modalAlert, setModalAlert] = useState(false);\r\n  useEffect(() => {\r\n    const obtenerDatosProductos = async () => {\r\n      const data = await getDocs(collection(db, \"productos\"));\r\n\r\n      const arrayProductos = data.docs.map((productos) => ({\r\n        id: productos.id,\r\n        ...productos.data(),\r\n      }));\r\n      setProductos(arrayProductos);\r\n    };\r\n\r\n    obtenerDatosProductos();\r\n  }, []);\r\n  //aliminar\r\n  /*   const eliminarProducto = async (id) => {\r\n    try {\r\n      await deleteDoc(doc(db, \"productos\", id));\r\n      const arrayEliminado = productos.filter((producto) => producto.id !== id);\r\n      setProductos(arrayEliminado);\r\n    } catch (error) {}\r\n  }; */\r\n  //agregar Producto\r\n\r\n  const agregarProducto = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      nombreProducto === \"\" ||\r\n      cantidadDisponibles === \"\" ||\r\n      categoriaProducto === \"\" ||\r\n      categoriaProducto === \"\" ||\r\n      impuestoProducto === \"\"\r\n    ) {\r\n      setError(\"Todos los espacios son obligatorios\");\r\n      return;\r\n    }\r\n    try {\r\n      const nuevoProducto = {\r\n        cantidad: cantidadDisponibles,\r\n        categoria: categoriaProducto,\r\n        impuesto: impuestoProducto,\r\n        nombre: nombreProducto,\r\n        precio: precioProducto,\r\n      };\r\n      const ref = await addDoc(collection(db, \"productos\"), {\r\n        cantidad: nuevoProducto.cantidad,\r\n        categoria: nuevoProducto.categoria,\r\n        impuesto: nuevoProducto.impuesto,\r\n        nombre: nuevoProducto.nombre,\r\n        precio: nuevoProducto.precio,\r\n      });\r\n      setProductos([...productos, { ...nuevoProducto, id: ref.id }]);\r\n      setNombreProducto(\"\");\r\n      setCategoriaProducto(\"\");\r\n      setCantidadDisponibles(\"\");\r\n      setPrecioProducto(\"\");\r\n      setImpuestoProducto(\"\");\r\n      setPrecioProducto(\"\");\r\n      setModalAlert(true);\r\n      setError(\"PRODUCTO AÃ‘ADIDO EXITOSAMENTE\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  const activarEdicion = (item) => {\r\n    setModoEdicion(true);\r\n    setNombreProducto(item.nombre);\r\n    setCategoriaProducto(item.categoria);\r\n    setCantidadDisponibles(item.cantidad);\r\n    setImpuestoProducto(item.impuesto);\r\n    setPrecioProducto(item.precio);\r\n    setId(item.id);\r\n  };\r\n\r\n  const editarProducto = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      nombreProducto === \"\" ||\r\n      categoriaProducto === \"\" ||\r\n      cantidadDisponibles === \"\" ||\r\n      impuestoProducto === \"\" ||\r\n      precioProducto === \"\"\r\n    ) {\r\n      setError(\"Todos los espacios son obligatorios\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await setDoc(doc(db, \"productos\", id), {\r\n        nombre: nombreProducto,\r\n        categoria: categoriaProducto,\r\n        cantidad: cantidadDisponibles,\r\n        impuesto: impuestoProducto,\r\n        precio: precioProducto,\r\n      });\r\n\r\n      const arrayEditado = productos.map((productoEditado) =>\r\n        productoEditado.id === id\r\n          ? {\r\n              id: productoEditado.id,\r\n              nombre: nombreProducto,\r\n              categoria: categoriaProducto,\r\n              cantidad: cantidadDisponibles,\r\n              impuesto: impuestoProducto,\r\n              precio: precioProducto,\r\n            }\r\n          : productoEditado\r\n      );\r\n      setProductos(arrayEditado);\r\n      setModoEdicion(false);\r\n\r\n      setNombreProducto(\"\");\r\n      setCategoriaProducto(\"\");\r\n      setCantidadDisponibles(\"\");\r\n      setImpuestoProducto(\"\");\r\n      setPrecioProducto(\"\");\r\n      setId(\"\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleChangeBuscador = (e) => {\r\n    e.preventDefault();\r\n    const arrayEditadoBuscado = productos.filter(\r\n      (item) =>\r\n        item.nombre.toString().toLowerCase() ===\r\n        obtenerBusqueda.toString().toLowerCase()\r\n    );\r\n\r\n    if (obtenerBusqueda === []) {\r\n      setArrayBusquedaEditado([]);\r\n    } else {\r\n      setArrayBusquedaEditado(arrayEditadoBuscado);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-w-screen h-screen bg-white\">\r\n        <PopUp\r\n          modalAlert={modalAlert}\r\n          setModalAlert={setModalAlert}\r\n          error={error}\r\n        />\r\n\r\n        <div className=\"\">\r\n          <div className=\"flex mb-4 flex-col md:flex-row\">\r\n            <div className=\"w-full md:w-2/3  border bg-gradient-to-r from-gray-500 to-gray-400 shadow-sm px-5 h-full\">\r\n              <h3 className=\" text-white font-bold\">\r\n                {obtenerBusqueda && arrayBusquedaEditado\r\n                  ? arrayBusquedaEditado.map((item) => (\r\n                      <div key={item.id} className=\"uppercase border my-5 p-3\">\r\n                        <p className=\"text-teal-500\">{item.nombre} </p>\r\n                        {item.cantidad < 10 ? (\r\n                          <li className=\"text-white md:text-xl\">\r\n                            Cantidad Disponibles:{\" \"}\r\n                            <span className=\"md:text-2xl text-redO \">\r\n                              {item.cantidad}{\" \"}\r\n                            </span>\r\n                            <span className=\" bg-orange-400 text-white text-sm font-bold rounded-md\">\r\n                              Â¡Quedan pocos Disponibles!\r\n                            </span>\r\n                          </li>\r\n                        ) : (\r\n                          <li className=\"text-white text-lg \">\r\n                            Cantidad Disponibles:{\" \"}\r\n                            <span className=\"text-xl text-sky-700\">\r\n                              {item.cantidad}{\" \"}\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                        {/*  <button\r\n                  onClick={() => eliminarProducto(products.id)}\r\n                  className=\"float-right bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-2 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\r\n                >\r\n                  Eliminar\r\n                </button> */}\r\n                        <button\r\n                          onClick={() => activarEdicion(item)}\r\n                          className=\"float-right mr-2 bg-orange-500 hover:bg-orange-400 text-white font-bold py-2 px-2 border-b-4 border-orange-700 hover:border-orange-500 rounded\"\r\n                        >\r\n                          Editar\r\n                        </button>\r\n                        <li>categoria: {item.categoria} </li>\r\n\r\n                        <li className=\"text-red-400\">\r\n                          precio aiva:<span className=\"text-teal-500\">$</span>{\" \"}\r\n                          {item.precio}{\" \"}\r\n                        </li>\r\n\r\n                        <li className=\"text-orange-400\">\r\n                          impuesto asignado: {item.impuesto}{\" \"}\r\n                          <span className=\"text-teal-500\">%</span>\r\n                        </li>\r\n                        <li className=\"text-green-400\">\r\n                          precio venta: <span className=\"text-teal-500\">$</span>{\" \"}\r\n                          {(Number(item.impuesto) / 100) * Number(item.precio) +\r\n                            Number(item.precio)}\r\n                        </li>\r\n                      </div>\r\n                    ))\r\n                  : productos.map((products) => (\r\n                      <div\r\n                        key={products.id}\r\n                        className=\"uppercase border my-5 p-3\"\r\n                      >\r\n                        <p className=\"text-teal-500\">{products.nombre} </p>\r\n                        {products.cantidad < 10 ? (\r\n                          <li className=\"text-white md:text-xl\">\r\n                            Cantidad Disponibles:{\" \"}\r\n                            <span className=\"md:text-2xl text-redO \">\r\n                              {products.cantidad}{\" \"}\r\n                            </span>\r\n                            <span className=\" bg-orange-400 text-white text-sm font-bold rounded-md\">\r\n                              Â¡Quedan pocos Disponibles!\r\n                            </span>\r\n                          </li>\r\n                        ) : (\r\n                          <li className=\"text-white text-lg \">\r\n                            Cantidad Disponibles:{\" \"}\r\n                            <span className=\"text-xl text-sky-700\">\r\n                              {products.cantidad}{\" \"}\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                        {/*  <button\r\n                      onClick={() => eliminarProducto(products.id)}\r\n                      className=\"float-right bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-2 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\r\n                    >\r\n                      Eliminar\r\n                    </button> */}\r\n                        <button\r\n                          onClick={() => activarEdicion(products)}\r\n                          className=\"float-right mr-2 bg-orange-500 hover:bg-orange-400 text-white font-bold py-2 px-2 border-b-4 border-orange-700 hover:border-orange-500 rounded\"\r\n                        >\r\n                          Editar\r\n                        </button>\r\n                        <li>categoria: {products.categoria} </li>\r\n\r\n                        <li className=\"text-red-400\">\r\n                          precio aiva:<span className=\"text-teal-500\">$</span>{\" \"}\r\n                          {products.precio}{\" \"}\r\n                        </li>\r\n\r\n                        <li className=\"text-orange-400\">\r\n                          impuesto asignado: {products.impuesto}{\" \"}\r\n                          <span className=\"text-teal-500\">%</span>\r\n                        </li>\r\n                        <li className=\"text-green-400\">\r\n                          precio venta: <span className=\"text-teal-500\">$</span>{\" \"}\r\n                          {(Number(products.impuesto) / 100) *\r\n                            Number(products.precio) +\r\n                            Number(products.precio)}\r\n                        </li>\r\n                      </div>\r\n                    ))}\r\n              </h3>\r\n              <ul className=\"list-group\"></ul>\r\n            </div>\r\n            <div className=\"w-full md:w-1/3 text-center\">\r\n              <form onSubmit={handleChangeBuscador}>\r\n                <input\r\n                  onChange={(e) => setObtenerBusqueda(e.target.value)}\r\n                  className=\"border bg-slate-300 text-red text-lg rounded-md p-2\"\r\n                  type=\"text\"\r\n                  placeholder=\"Buscador\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-blue-400 rounded-md p-4 mt-5\"\r\n                >\r\n                  Buscar\r\n                </button>\r\n              </form>\r\n              <h3 className=\"text-teal-500 font-bold text-2xl py-4\">\r\n                AGREGAR PRODUCTOS\r\n              </h3>\r\n              <form\r\n                onSubmit={ModoEdicion ? editarProducto : agregarProducto}\r\n                className=\"m-5 r border border-cyan-900 \"\r\n              >\r\n                <div className=\"\">\r\n                  <div className=\"py-2 \">\r\n                    <label\r\n                      htmlFor=\"nombre\"\r\n                      className=\"bg-teal-500 rounded text-white font-bold px-2 \"\r\n                    >\r\n                      NOMBRE\r\n                    </label>\r\n                    <hr />\r\n                    <input\r\n                      id=\"nombre\"\r\n                      type=\"text\"\r\n                      placeholder=\"NOMBRE PRODUCTOS\"\r\n                      className=\"border\"\r\n                      value={nombreProducto}\r\n                      onChange={(e) => setNombreProducto(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"py-2\">\r\n                    <label\r\n                      htmlFor=\"cantidad\"\r\n                      className=\"bg-teal-500 rounded text-white font-bold px-2\"\r\n                    >\r\n                      CANTIDAD DISPONIBLES\r\n                    </label>\r\n                    <hr />\r\n                    <input\r\n                      id=\"cantidad\"\r\n                      type=\"text\"\r\n                      placeholder=\"CANTIDAD STOCK\"\r\n                      className=\"border\"\r\n                      value={cantidadDisponibles}\r\n                      onChange={(e) => setCantidadDisponibles(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"py-2\">\r\n                    <label\r\n                      htmlFor=\"categoria\"\r\n                      className=\"bg-teal-500 rounded text-white font-bold px-2\"\r\n                    >\r\n                      CATEGORIA\r\n                    </label>\r\n                    <hr />\r\n                    <input\r\n                      id=\"categoria\"\r\n                      type=\"text\"\r\n                      placeholder=\"CATEGORIA PRODUCTOS\"\r\n                      className=\"border\"\r\n                      value={categoriaProducto}\r\n                      onChange={(e) => setCategoriaProducto(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"py-2\">\r\n                    <label\r\n                      htmlFor=\"precio\"\r\n                      className=\"bg-teal-500 rounded text-white font-bold px-2\"\r\n                    >\r\n                      PRECIO ANTES DE IVA\r\n                    </label>\r\n                    <hr />\r\n                    <input\r\n                      id=\"precio\"\r\n                      type=\"text\"\r\n                      placeholder=\"PRECIO ANTES IVA\"\r\n                      className=\"borde\"\r\n                      value={precioProducto}\r\n                      onChange={(e) => setPrecioProducto(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"py-2\">\r\n                    <label\r\n                      htmlFor=\"impuesto\"\r\n                      className=\"bg-teal-500 rounded text-white font-bold px-2\"\r\n                    >\r\n                      IMPUESTO %\r\n                    </label>\r\n                    <hr />\r\n                    <input\r\n                      id=\"impuesto\"\r\n                      type=\"text\"\r\n                      placeholder=\"IMPUESTO EX 1,2,4,12,13\"\r\n                      className=\"border\"\r\n                      value={impuestoProducto}\r\n                      onChange={(e) => setImpuestoProducto(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"mb-5\">\r\n                  {ModoEdicion ? (\r\n                    <p className=\"bg-orange-500 hover:bg-orange-400 text-white font-bold py-2 px-2 border-b-4 border-orange-700 hover:orange-blue-500 rounded\">\r\n                      EDITAR CLIENTE\r\n                    </p>\r\n                  ) : (\r\n                    <p className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-2 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\r\n                      AGREGAR CLIENTE\r\n                    </p>\r\n                  )}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Productos;\r\n","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Clientes.jsx",["65"],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\NavBar.jsx",["66","67"],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\FormularioFactura.jsx",["68","69"],[],"import { addDoc, collection, getDocs, doc, setDoc } from \"firebase/firestore\";\r\nimport { useState, useEffect } from \"react\";\r\nimport db from \"../firebase\";\r\nimport Select from \"react-select\";\r\nimport Modal from \"./Modal\";\r\nimport PopUp from \"./PopUp\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst FormularioFactura = () => {\r\n  //obetener datos y mostarr en MODAL\r\n  const [datosCliente, setDatosCliente] = useState([]);\r\n  const [datosProductos, setDatosProductos] = useState([]);\r\n  console.log(datosProductos);\r\n  //guardar datos de select\r\n  const [nombreSelect, setNombreSelect] = useState([]);\r\n  const [nombreClienteFactura, setNombreClienteFactura] = useState(\"\");\r\n  const [productoSelect, setProductoSelect] = useState([]);\r\n  const [nombreProductoFactura, setNombreProductoFactura] = useState(\"\");\r\n\r\n  //   ARREGLOS GUARDADOS DE PRODUCTOS CLIENTES Y FACTURAS\r\n  const [cantidadActual, setCantidadActual] = useState(\"\");\r\n  const [productos, setProductos] = useState([]);\r\n  const [clientes, setClientes] = useState([]);\r\n  const [facturas, setFacturas] = useState([]);\r\n  //modal VENTANA FACTURA Y MODAL ALERTA\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalAlert, setModalAlert] = useState(false);\r\n  //INPUTS SOLICITANDO NOMBRE AL USUARIO\r\n  const [cantidadProductos, setCantidadProductos] = useState(0);\r\n  const [id, setId] = useState(null);\r\n  console.log(id);\r\n\r\n  const [idInventario, setIdInventario] = useState(null);\r\n\r\n  //MENSAJE DE ERROR\r\n  const [error, setError] = useState(null);\r\n  //OBTENER TODOS LOS CLIENTES\r\n  useEffect(() => {\r\n    const obtenerDatosCliente = async () => {\r\n      const data = await getDocs(collection(db, \"clientes\"));\r\n\r\n      const arrayClientes = data.docs.map((item) => ({\r\n        id: item.id,\r\n        ...item.data(),\r\n      }));\r\n      setClientes(arrayClientes);\r\n    };\r\n    obtenerDatosCliente();\r\n  }, []);\r\n\r\n  //OBTENER TODOS LOS PRODUCTOS\r\n  useEffect(() => {\r\n    const obtenerDatosProductos = async () => {\r\n      const data = await getDocs(collection(db, \"productos\"));\r\n      const arrayProductos = data.docs.map((productos) => ({\r\n        id: productos.id,\r\n        ...productos.data(),\r\n      }));\r\n      setProductos(arrayProductos);\r\n    };\r\n\r\n    obtenerDatosProductos();\r\n  }, []);\r\n  //OBTENER DATOS FACTURA\r\n  useEffect(() => {\r\n    const obtenerDatosProductos = async () => {\r\n      const data = await getDocs(collection(db, \"facturas\"));\r\n      const arrayFacturas = data.docs.map((facturas) => ({\r\n        id: facturas.id,\r\n        ...facturas.data(),\r\n      }));\r\n      setFacturas(arrayFacturas);\r\n    };\r\n\r\n    obtenerDatosProductos();\r\n  }, []);\r\n  //CREAR FACTURAS\r\n  const agregarProducto = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nombreClienteFactura === \"\" || cantidadProductos === \"\") {\r\n      setError(\"Todos los espacios son obligatorios\");\r\n      return;\r\n    }\r\n    if (cantidadProductos >= Number(datosProductos.cantidad)) {\r\n      setError(<h1 className=\"text-red\">EXEDE LOS PRODUCTOS DE INVENTARIO</h1>);\r\n      setModalAlert(true);\r\n      return;\r\n    }\r\n    try {\r\n      const nuevaFactura = {\r\n        facha: Date.now(),\r\n        nombre: nombreClienteFactura,\r\n        email: datosCliente.email,\r\n        direccion: datosCliente.direccion,\r\n        telefono: datosCliente.telefono,\r\n        productos: nombreProductoFactura,\r\n        cantidad: cantidadProductos,\r\n        cantidadDisponibles: datosProductos.cantidad,\r\n        impuesto: datosProductos.impuesto,\r\n        precio: datosProductos.precio,\r\n      };\r\n      const ref = await addDoc(collection(db, \"facturas\"), {\r\n        facha: Date.now(),\r\n        nombre: nuevaFactura.nombre,\r\n        email: nuevaFactura.email,\r\n        direccion: nuevaFactura.email,\r\n        telefono: nuevaFactura.telefono,\r\n        productos: nuevaFactura.productos,\r\n        cantidad: nuevaFactura.cantidad,\r\n        cantidadDisponibles: nuevaFactura.cantidadDisponibles,\r\n        impuesto: nuevaFactura.impuesto,\r\n        precio: nuevaFactura.precio,\r\n      });\r\n      setFacturas([...facturas, { ...nuevaFactura, id: ref.id }]);\r\n      setError(\"FACTURA CREADA CORRECTAMENTE\");\r\n      setModalAlert(true);\r\n      editarProducto();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const mostrarFactura = (item) => {\r\n    setId(item.id);\r\n    setShowModal(true);\r\n  };\r\n  useEffect(() => {\r\n    const arrayCliente = clientes.map((cliente) => ({\r\n      value: cliente.nombre,\r\n      label: cliente.nombre,\r\n      direccion: cliente.direccion,\r\n      email: cliente.email,\r\n      telefono: cliente.telefono,\r\n      id: cliente.id,\r\n    }));\r\n    const arrayProductos = productos.map((producto) => ({\r\n      value: producto.nombre,\r\n      label: producto.nombre,\r\n      precio: producto.precio,\r\n      impuesto: producto.impuesto,\r\n      cantidad: producto.cantidad,\r\n      categoria: producto.categoria,\r\n      id: producto.id,\r\n    }));\r\n    setNombreSelect(arrayCliente);\r\n    setProductoSelect(arrayProductos);\r\n  }, [facturas]);\r\n\r\n  const handleNameSelectName = (event) => {\r\n    setNombreClienteFactura(event.value);\r\n    setDatosCliente({\r\n      direccion: event.direccion,\r\n      email: event.email,\r\n      telefono: event.telefono,\r\n    });\r\n  };\r\n  const handleProductSelectName = (event) => {\r\n    setNombreProductoFactura(event.value);\r\n    setIdInventario(event.id);\r\n    setCantidadActual(event.cantidad);\r\n    setDatosProductos({\r\n      id: event.id,\r\n      nombre: event.value,\r\n      categoria: event.categoria,\r\n      precio: event.precio,\r\n      impuesto: event.impuesto,\r\n      cantidad: event.cantidad,\r\n    });\r\n  };\r\n  //ELIMINAR PRODUCTOS DE INVENTARIO --------------------------------------------\r\n  const editarProducto = async (e) => {\r\n    try {\r\n      await setDoc(doc(db, \"productos\", idInventario), {\r\n        cantidad: Number(cantidadActual) - Number(cantidadProductos),\r\n        categoria: datosProductos.categoria,\r\n        impuesto: datosProductos.impuesto,\r\n        nombre: datosProductos.nombre,\r\n        precio: datosProductos.precio,\r\n      });\r\n      setId(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2\">\r\n      <PopUp\r\n        modalAlert={modalAlert}\r\n        setModalAlert={setModalAlert}\r\n        error={error}\r\n      />\r\n      <div className=\"\">\r\n        <form onSubmit={agregarProducto}>\r\n          <h1 className=\"text-center text-teal-500 text-3xl font-bold\">\r\n            CREAR FACTURA{\" \"}\r\n          </h1>\r\n          <div className=\"border text-center font-bold w-full shadow-xl px-5 py-10 \">\r\n            {error && (\r\n              <p className=\"border bg-red-200 text-center font-bold\">\r\n                {error}{\" \"}\r\n              </p>\r\n            )}\r\n            <div>\r\n              <label className=\"text-red-600 float-left  bg-teal-500 rounded text-white font-bold px-2 mr-5\">\r\n                Nombre fatura:\r\n              </label>\r\n              <Select\r\n                options={nombreSelect}\r\n                onChange={handleNameSelectName}\r\n                placeholder=\"SELECCIONE CLIENTE\"\r\n                className=\"m-10\"\r\n              />\r\n              <label className=\"text-red-600 float-left  bg-teal-500 rounded text-white font-bold px-2 mr-5\">\r\n                Productos Factura:\r\n              </label>\r\n              <Select\r\n                options={productoSelect}\r\n                onChange={handleProductSelectName}\r\n                placeholder=\"SELECCIONE PRODUCTOS\"\r\n                className=\"m-10\"\r\n              />\r\n              <h2 className=\"text-teal-500\">\r\n                STOCK DISPONIBLE:{\" \"}\r\n                <span className=\"text-2xl\">{datosProductos.cantidad} </span>\r\n              </h2>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"text-red-600 float-left bg-teal-500 rounded text-white font-bold px-2\">\r\n                Cantidad a Facturar :\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"border\"\r\n                onChange={(e) => setCantidadProductos(e.target.value)}\r\n                value={cantidadProductos}\r\n                placeholder=\"CANTIDADES\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-center mt-5 text-lg\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\" bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n            >\r\n              Crear Factura\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <p className=\"text-center bg-yellow-200\">Listado Facturas</p>\r\n          {facturas.map((item) => (\r\n            <div\r\n              key={item.id}\r\n              className=\"border bg-slate-400 block md:flex gap-6 text-center p-4 uppercase justify-evenly \"\r\n            >\r\n              <div className=\"\">\r\n                <div>\r\n                  Nombre:{\" \"}\r\n                  <h2 className=\"font-bold text-red-500\">{item.nombre}</h2>{\" \"}\r\n                </div>{\" \"}\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                {\" \"}\r\n                <div>\r\n                  Numero Factura:\r\n                  <h2 className=\"font-bold text-red-500\">{item.id}</h2>{\" \"}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                {\" \"}\r\n                <Modal\r\n                  showModal={showModal}\r\n                  facturas={facturas}\r\n                  id={id}\r\n                  setShowModal={setShowModal}\r\n                  datosCliente={datosCliente}\r\n                />\r\n                <button\r\n                  className=\"bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                  type=\"button\"\r\n                  onClick={() => mostrarFactura(item)}\r\n                >\r\n                  ABRIR\r\n                </button>\r\n                <button\r\n                  className=\"bg-orange-500 text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                  type=\"button\"\r\n                  onClick={() => mostrarFactura(item)}\r\n                >\r\n                  Anular\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormularioFactura;\r\n","C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Login.jsx",["70","71","72","73","74","75"],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\PopUp.jsx",[],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\PanelControl.jsx",["76","77","78","79","80","81"],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\firebase.js",[],[],"C:\\Users\\Pipe17\\Desktop\\practicaReact\\loginfirebase\\src\\components\\Modal.jsx",[],[],{"ruleId":"82","severity":1,"message":"83","line":1,"column":40,"nodeType":"84","messageId":"85","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":23,"column":6,"nodeType":"88","endLine":23,"endColumn":8,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":8,"column":3,"nodeType":"84","messageId":"85","endLine":8,"endColumn":12},{"ruleId":"82","severity":1,"message":"91","line":18,"column":10,"nodeType":"84","messageId":"85","endLine":18,"endColumn":14},{"ruleId":"86","severity":1,"message":"92","line":27,"column":6,"nodeType":"88","endLine":27,"endColumn":8,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"92","line":31,"column":6,"nodeType":"88","endLine":31,"endColumn":8,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"95","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"96","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":8,"column":10,"nodeType":"84","messageId":"85","endLine":8,"endColumn":14},{"ruleId":"86","severity":1,"message":"97","line":148,"column":6,"nodeType":"88","endLine":148,"endColumn":16,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"99","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":4,"column":23,"nodeType":"84","messageId":"85","endLine":4,"endColumn":27},{"ruleId":"82","severity":1,"message":"100","line":12,"column":10,"nodeType":"84","messageId":"85","endLine":12,"endColumn":15},{"ruleId":"82","severity":1,"message":"101","line":19,"column":10,"nodeType":"84","messageId":"85","endLine":19,"endColumn":19},{"ruleId":"86","severity":1,"message":"102","line":63,"column":6,"nodeType":"88","endLine":63,"endColumn":19,"suggestions":"103"},{"ruleId":"86","severity":1,"message":"102","line":93,"column":6,"nodeType":"88","endLine":93,"endColumn":32,"suggestions":"104"},{"ruleId":"82","severity":1,"message":"90","line":6,"column":3,"nodeType":"84","messageId":"85","endLine":6,"endColumn":12},{"ruleId":"82","severity":1,"message":"105","line":8,"column":3,"nodeType":"84","messageId":"85","endLine":8,"endColumn":6},{"ruleId":"82","severity":1,"message":"106","line":9,"column":3,"nodeType":"84","messageId":"85","endLine":9,"endColumn":9},{"ruleId":"82","severity":1,"message":"107","line":10,"column":3,"nodeType":"84","messageId":"85","endLine":10,"endColumn":9},{"ruleId":"82","severity":1,"message":"91","line":25,"column":10,"nodeType":"84","messageId":"85","endLine":25,"endColumn":14},{"ruleId":"86","severity":1,"message":"92","line":36,"column":6,"nodeType":"88","endLine":36,"endColumn":8,"suggestions":"108"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'deleteDoc' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["110"],["111"],"'useState' is defined but never used.","'NavLink' is defined but never used.","React Hook useEffect has missing dependencies: 'clientes' and 'productos'. Either include them or remove the dependency array.",["112"],"'PopUp' is defined but never used.","'async' is defined but never used.","'loginJoin' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["113"],["114"],"'doc' is defined but never used.","'addDoc' is defined but never used.","'setDoc' is defined but never used.",["115"],{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"118","fix":"127"},"Update the dependencies array to be: [auth]",{"range":"128","text":"129"},"Update the dependencies array to be: [navigate]",{"range":"130","text":"131"},{"range":"132","text":"131"},"Update the dependencies array to be: [clientes, facturas, productos]",{"range":"133","text":"134"},"Update the dependencies array to be: [email, navigate, pass]",{"range":"135","text":"136"},"Update the dependencies array to be: [email, pass, nombreLogin, navigate]",{"range":"137","text":"138"},{"range":"139","text":"131"},[778,780],"[auth]",[636,638],"[navigate]",[813,815],[5012,5022],"[clientes, facturas, productos]",[1893,1906],"[email, navigate, pass]",[2788,2814],"[email, pass, nombreLogin, navigate]",[1053,1055]]